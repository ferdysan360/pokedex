{"version":3,"sources":["Assets/pokedex_logo.png","App.js","reportWebVitals.js","index.js"],"names":["PokemonList","loadable","PokemonDetails","MyPokemon","App","useState","page","setPage","pokemonName","setPokemonName","section","css","flex","pokedexLogoStyle","callback","newPage","classes","makeStyles","theme","margin","spacing","useStyles","className","src","PokedexLogo","alt","Button","size","variant","color","onClick","pokemonListCallback","myPokemonCallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,MAA0B,yC,OCUnCA,EAAcC,aAAS,kBAAM,uDAC7BC,EAAiBD,aAAS,kBAAM,qEAChCE,EAAYF,aAAS,kBAAM,uDAwElBG,MAtEf,WAAgB,IAAD,EAEWC,mBAAS,eAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGyBF,mBAAS,MAHlC,mBAGNG,EAHM,KAGOC,EAHP,KAKPC,EAAUC,YAAH,8EAKPC,EAAOD,YAAH,gKAQJE,EAAmBF,YAAH,sEAKhBG,EAAW,SAACR,EAAME,GACtB,IAAMO,EAAUT,EAEhBG,EADuBD,GAEvBD,EAAQQ,IASJC,EANYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNA,OAAQD,EAAME,QAAQ,QAIVC,GAEhB,OACE,mBAAKC,UAAU,MAAf,UACE,sBAAQA,UAAU,aAAlB,SACE,mBAAKX,IAAKD,EAAV,UACE,mBAAKC,IAAKE,EAAkBU,IAAKC,EAAaC,IAAI,iBAClD,6BACE,YAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,YAAYC,MAAM,UAAUP,UAAWN,EAAQG,OAAQW,QAAS,WAAQvB,EAAQ,gBAA7G,0BAGA,YAACmB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,YAAYC,MAAM,UAAUP,UAAWN,EAAQG,OAAQW,QAAS,WAAQvB,EAAQ,cAA7G,gCAMN,mBAAKI,IAAKC,EAAV,SACE,mBAAKD,IAAKD,EAAV,SAEa,gBAATJ,EACE,YAACN,EAAD,CAAa+B,oBAAqBjB,IACzB,cAATR,EACA,YAACH,EAAD,CAAW6B,kBAAmBlB,IACrB,mBAATR,EACA,YAACJ,EAAD,CAAgBM,YAAaA,IAC7B,sDChECyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62dd39fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokedex_logo.beda6a95.png\";","/** @jsxImportSource @emotion/react */\nimport './App.css';\nimport { css } from '@emotion/react'\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport loadable from '@loadable/component';\nimport PokedexLogo from './Assets/pokedex_logo.png';\n\n// Code Splitting with Loadable Component\nconst PokemonList = loadable(() => import('./Containers/PokemonList'));\nconst PokemonDetails = loadable(() => import('./Containers/PokemonDetails'));\nconst MyPokemon = loadable(() => import('./Containers/MyPokemon'));\n\nfunction App() {\n\n  const [page, setPage] = useState(\"pokemonList\");\n  const [pokemonName, setPokemonName] = useState(null);\n\n  const section = css`\n    margin: 20px 20px;\n    max-width: 1280px;\n  `\n\n  const flex = css`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-evenly;\n    flex-wrap: wrap;\n  `\n\n  const pokedexLogoStyle = css`\n    width: 138.2px;\n    height: 50px;\n  `\n\n  const callback = (page, pokemonName) => {\n    const newPage = page;\n    const newPokemonName = pokemonName;\n    setPokemonName(newPokemonName);\n    setPage(newPage);\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(0.5),\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div css={section}>\n          <img css={pokedexLogoStyle} src={PokedexLogo} alt=\"pokedex-logo\" />\n          <div>\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" className={classes.margin} onClick={() => { setPage(\"pokemonList\") }}>\n              Pokemon List\n            </Button>\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" className={classes.margin} onClick={() => { setPage(\"myPokemon\") }}>\n              My Pokemon\n            </Button>\n          </div>\n        </div>\n      </header>\n      <div css={flex}>\n        <div css={section}>\n          {\n            page === \"pokemonList\" ? \n              <PokemonList pokemonListCallback={callback}/>\n            : page === \"myPokemon\" ?\n              <MyPokemon myPokemonCallback={callback}/>\n            : page === \"pokemonDetails\" ?\n              <PokemonDetails pokemonName={pokemonName}/>\n            : <h1>Page Not Found</h1>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}