{"version":3,"sources":["Containers/PokemonList.js"],"names":["PokemonCard","loadable","PokemonList","pokemonListCallback","useState","prev","setPrev","next","setNext","url","setUrl","pokemonList","setPokemonList","myPokemonList","setMyPokemonList","flexPokemonList","css","useEffect","axios","get","then","result","data","previous","results","catch","error","console","log","JSON","parse","window","localStorage","getItem","detailsPokemon","pokemonName","callback","countPokemon","length","count","i","name","classes","makeStyles","theme","margin","spacing","useStyles","map","pokemon","countFunction","detailsFunction","size","variant","color","className","disabled","onClick"],"mappings":"gMASMA,EAAcC,aAAS,kBAAM,iCAsFpBC,UApFK,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EAEnBC,mBAAS,MAFU,mBAEpCC,EAFoC,KAE9BC,EAF8B,OAGnBF,mBAAS,MAHU,mBAGpCG,EAHoC,KAG9BC,EAH8B,OAIrBJ,mBAAS,qCAJY,mBAIpCK,EAJoC,KAI/BC,EAJ+B,OAKLN,mBAAS,MALJ,mBAKpCO,EALoC,KAKvBC,EALuB,OAMDR,mBAAS,MANR,mBAMpCS,EANoC,KAMrBC,EANqB,KAQrCC,EAAkBC,YAAH,yNASrBC,qBAAU,WACNC,IAAMC,IAAIV,GACTW,MAAK,SAAAC,GACFf,EAAQe,EAAOC,KAAKC,UACpBf,EAAQa,EAAOC,KAAKf,MACpBK,EAAeS,EAAOC,KAAKE,YAE9BC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAGhBZ,EAAiBe,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,kBACzD,CAACxB,IAEJ,IAIMyB,EAAiB,SAAEC,IAJR,SAACA,GACdhC,EAAoB,iBAAkBgC,GAItCC,CAASD,IAGPE,EAAe,SAAEF,GACnB,GAAItB,GAA2C,KAAb,OAAbA,QAAa,IAAbA,OAAA,EAAAA,EAAeyB,QAAc,CAE9C,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,GAAC,OAAG3B,QAAH,IAAGA,OAAH,EAAGA,EAAeyB,QAAQE,IACnC3B,EAAc2B,GAAGC,OAASN,GAC1BI,IAIR,OAAOA,EAGP,OAAO,GAUTG,EANYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJA,OAAQD,EAAME,QAAQ,QAIdC,GAEhB,OACI,6BACI,4CACA,mBAAK/B,IAAKD,EAAV,gBACKJ,QADL,IACKA,OADL,EACKA,EAAaqC,KAAI,SAACC,GAAD,OACd,YAACjD,EAAD,CAAgCiD,QAASA,EAASC,cAAeb,EAAcc,gBAAiBjB,GAA9Ee,EAAQR,WAGlC,6BACI,YAAC,IAAD,CAAQW,KAAK,QAAQC,QAAQ,YAAYC,MAAM,UAAUC,UAAWb,EAAQG,OAAQW,SAAmB,OAATnD,EAAeoD,QAAS,WAAQ/C,EAAOL,IAArI,oBAGA,YAAC,IAAD,CAAQ+C,KAAK,QAAQC,QAAQ,YAAYC,MAAM,UAAUC,UAAWb,EAAQG,OAAQW,SAAmB,OAATjD,EAAekD,QAAS,WAAQ/C,EAAOH,IAArI","file":"static/js/9.968b7094.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react'\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport loadable from '@loadable/component';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Code Splitting with Loadable Component\r\nconst PokemonCard = loadable(() => import('../Components/PokemonCard'));\r\n\r\nconst PokemonList = ({pokemonListCallback}) => {\r\n\r\n    const [prev, setPrev] = useState(null);\r\n    const [next, setNext] = useState(null);\r\n    const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon');\r\n    const [pokemonList, setPokemonList] = useState(null);\r\n    const [myPokemonList, setMyPokemonList] = useState(null);\r\n\r\n    const flexPokemonList = css`\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: space-evenly;\r\n        flex-wrap: wrap;\r\n        margin: 0px 0px 20px 0px;\r\n    `\r\n    \r\n    useEffect(() => {\r\n        axios.get(url)\r\n        .then(result => {\r\n            setPrev(result.data.previous);\r\n            setNext(result.data.next);\r\n            setPokemonList(result.data.results);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n\r\n        setMyPokemonList(JSON.parse(window.localStorage.getItem(\"my_pokemon\")));\r\n    }, [url]);\r\n\r\n    const callback = (pokemonName) => {\r\n        pokemonListCallback(\"pokemonDetails\", pokemonName);\r\n    }\r\n\r\n    const detailsPokemon = ( pokemonName ) => {\r\n        callback(pokemonName);\r\n    }\r\n\r\n    const countPokemon = ( pokemonName ) => {\r\n        if (myPokemonList && myPokemonList?.length !== 0) {\r\n            var count = 0;\r\n            for (let i = 0; i < myPokemonList?.length; i++) {\r\n                if (myPokemonList[i].name === pokemonName) {\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            return count;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        margin: {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <h1>Pokemon List</h1>\r\n            <div css={flexPokemonList}>\r\n                {pokemonList?.map((pokemon) => (\r\n                    <PokemonCard key={pokemon.name} pokemon={pokemon} countFunction={countPokemon} detailsFunction={detailsPokemon} />\r\n                ))}\r\n            </div>\r\n            <div>\r\n                <Button size=\"small\" variant=\"contained\" color=\"default\" className={classes.margin} disabled={prev === null} onClick={() => { setUrl(prev) }}>\r\n                    &lt; Prev\r\n                </Button>\r\n                <Button size=\"small\" variant=\"contained\" color=\"default\" className={classes.margin} disabled={next === null} onClick={() => { setUrl(next) }}>\r\n                    Next &gt;\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default PokemonList;\r\n"],"sourceRoot":""}