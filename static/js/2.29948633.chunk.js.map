{"version":3,"sources":["Utils/Utility.js","Components/PokemonCard.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","PokemonCard","pokemon","countFunction","detailsFunction","releaseFunction","index","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","pokemonCardStyle","css","cardResponsiveStyle","countStyle","pokemonNicknameStyle","pokemonNameStyle","BlueButton","withStyles","theme","root","indigo","color","backgroundColor","Button","RedButton","palette","getContrastText","red","classes","makeStyles","margin","spacing","useStyles","nickname","name","size","variant","className","onClick"],"mappings":"8IAEA,SAASA,IAAuB,IAAD,EACwBC,OACnD,MAAO,CACHC,MAHuB,EACnBC,WAGJC,OAJuB,EACAC,a,+DCqHhBC,UAjHK,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,QAASC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,gBAAiBC,EAAY,EAAZA,MAErET,EDCL,WAAgC,IAAD,EACcU,mBAASZ,KADvB,mBAC3Ba,EAD2B,KACTC,EADS,KAYlC,OATAC,qBAAU,WACN,SAASC,IACLF,EAAoBd,KAIxB,OADAC,OAAOgB,iBAAiB,SAAUD,GAC3B,kBAAMf,OAAOiB,oBAAoB,SAAUF,MACnD,IAEIH,ECbWM,GAAVjB,MAEFkB,EAAmBC,YAAH,+YAehBC,EACNpB,EAAQ,IACHmB,YADL,8DAKKA,YALL,mEASME,EAAaF,YAAH,oFAKVG,EAAuBH,YAAH,8GAMpBI,EAAmBJ,YAAH,0DAIhBK,EAAaC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACF,eAAgBC,IAAO,KACvB,UAAW,CACPC,MAAOD,IAAO,IACdE,gBAAiBF,IAAO,UALjBH,CAQfM,KAEEC,EAAYP,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFE,MAAOH,EAAMO,QAAQC,gBAAgBC,IAAI,MACzCL,gBAAiBK,IAAI,KACrB,UAAW,CACPL,gBAAiBK,IAAI,UALfV,CAQdM,KAQEK,EANYC,aAAW,SAACX,GAAD,MAAY,CACrCY,OAAQ,CACJA,OAAQZ,EAAMa,QAAQ,QAIdC,GAEhB,OACI,mBAAKrB,IAAK,CAACD,EAAkBE,GAA7B,UAEQf,EAAQoC,SACH,mBAAKtB,IAAKG,EAAV,SACIjB,EAAQoC,WAEd,oBAGHpC,EAAQqC,KACH,mBAAKvB,IAAKI,EAAV,SACIlB,EAAQqC,OAEd,oBAGHpC,EACK,mBAAKa,IAAKE,EAAV,2BACef,EAAcD,EAAQqC,SAEvC,oBAGHnC,EACI,YAACiB,EAAD,CAAYmB,KAAK,QAAQC,QAAQ,WAAWf,MAAM,UAAUgB,UAAWT,EAAQE,OAAQQ,QAAS,WAAQvC,EAAgBF,EAAQqC,OAAhI,qBAGD,oBAGHlC,EACI,YAACwB,EAAD,CAAWW,KAAK,QAAQC,QAAQ,YAAYf,MAAM,UAAUgB,UAAWT,EAAQE,OAAQQ,QAAS,WAAQtC,EAAgBH,EAAQqC,KAAMjC,IAAtI,qBAGD","file":"static/js/2.29948633.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}\r\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react'\r\nimport { useWindowDimensions } from '../Utils/Utility';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { indigo, red } from '@material-ui/core/colors';\r\n\r\nconst PokemonCard = ({ pokemon, countFunction, detailsFunction, releaseFunction, index }) => {\r\n\r\n    const { width } = useWindowDimensions();\r\n\r\n    const pokemonCardStyle = css`\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: space-evenly;\r\n        flex-direction: column;\r\n        min-height: 100px;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        border-radius: 8px;\r\n        background-color: white;\r\n        box-shadow: 5px 10px 18px #888888;\r\n        font-size: 20px;\r\n        word-break: break-all;\r\n    `\r\n\r\n    const cardResponsiveStyle = \r\n    width < 520 ? \r\n        (css`\r\n            width: 100%;\r\n        `) \r\n    : \r\n        (css`\r\n            min-width: 200px;\r\n        `)\r\n    \r\n    const countStyle = css`\r\n        font-size: 14px;\r\n        margin: 5px 0px;\r\n    `\r\n\r\n    const pokemonNicknameStyle = css`\r\n        color: #828282;\r\n        font-size: 24px;\r\n        font-weight: 700;\r\n    `\r\n\r\n    const pokemonNameStyle = css`\r\n        margin: 5px 0px;\r\n    `\r\n\r\n    const BlueButton = withStyles((theme) => ({\r\n        root: {\r\n            'border-color': indigo[700],\r\n            '&:hover': {\r\n                color: indigo[50],\r\n                backgroundColor: indigo[900],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    const RedButton = withStyles((theme) => ({\r\n        root: {\r\n            color: theme.palette.getContrastText(red[600]),\r\n            backgroundColor: red[600],\r\n            '&:hover': {\r\n                backgroundColor: red[900],\r\n            },\r\n        },\r\n    }))(Button);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        margin: {\r\n            margin: theme.spacing(0.5),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div css={[pokemonCardStyle, cardResponsiveStyle]}>\r\n            {\r\n                pokemon.nickname ?\r\n                    (<div css={pokemonNicknameStyle}>\r\n                        {pokemon.nickname}\r\n                    </div>)\r\n                : (<></>)\r\n            }\r\n            {\r\n                pokemon.name ?\r\n                    (<div css={pokemonNameStyle}>\r\n                        {pokemon.name}\r\n                    </div>)\r\n                : (<></>)\r\n            }\r\n            {\r\n                countFunction ?\r\n                    (<div css={countStyle}>\r\n                        {`caught: ${countFunction(pokemon.name)}`}\r\n                    </div>)\r\n                : (<></>)\r\n            }\r\n            {\r\n                detailsFunction ?\r\n                    <BlueButton size=\"small\" variant=\"outlined\" color=\"primary\" className={classes.margin} onClick={() => { detailsFunction(pokemon.name) }} >\r\n                        Details\r\n                    </BlueButton>\r\n                : (<></>)\r\n            }\r\n            {\r\n                releaseFunction ?\r\n                    <RedButton size=\"small\" variant=\"contained\" color=\"primary\" className={classes.margin} onClick={() => { releaseFunction(pokemon.name, index) }} >\r\n                        Release\r\n                    </RedButton>\r\n                : (<></>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PokemonCard;\r\n"],"sourceRoot":""}